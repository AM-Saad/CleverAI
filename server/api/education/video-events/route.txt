import { NextRequest, NextResponse } from 'next/server';
import getServerSession from 'next-auth';
import prisma from '@/lib/prisma';
import { authOptions } from '@/app/api/auth/[...nextauth]/route';

// POST /api/education/video-events
export async function POST(req: NextRequest) {
  const session = await getServerSession(authOptions);
  if (!session || !('user' in session) || !session.user) {
    return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });
  }
  const user = session.user as { id: string; role: string };
  if (user.role !== 'STUDENT') {
    return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });
  }

  const { lessonId, videoType, event, position, duration } = await req.json();
  if (!lessonId || !videoType || !event || typeof position !== 'number') {
    return NextResponse.json({ error: 'Missing required fields' }, { status: 400 });
  }

  try {
    const videoEvent = await prisma.videoWatchEvent.create({
      data: {
        studentId: user.id,
        lessonId,
        videoType,
        event,
        position,
        duration: duration ?? null,
      },
    });
    return NextResponse.json({ success: true, videoEvent });
  } catch (error) {
    return NextResponse.json({ error: 'Failed to record event', details: error }, { status: 500 });
  }
}
